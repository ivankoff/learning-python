# -*- coding: utf-8 -*-
'''
Задание 9.4

Создать функцию, которая обрабатывает конфигурационный файл коммутатора
и возвращает словарь:
* Все команды верхнего уровня (глобального режима конфигурации), будут ключами.
* Если у команды верхнего уровня есть подкоманды, они должны быть в значении у соответствующего ключа, в виде списка (пробелы в начале строки можно оставлять).
* Если у команды верхнего уровня нет подкоманд, то значение будет пустым списком

Функция ожидает в качестве аргумента имя конфигурационного файла.

Проверить работу функции на примере файла config_sw1.txt

При обработке конфигурационного файла, надо игнорировать строки, которые начинаются с '!',
а также строки в которых содержатся слова из списка ignore.

Для проверки надо ли игнорировать строку, использовать функцию ignore_command.


Ограничение: Все задания надо выполнять используя только пройденные темы.
'''

############### functions ###################################################################################

def ignore_command(in_command):
    '''
    Функция проверяет содержится ли в команде слово из списка ignore.

    command - строка. Команда, которую надо проверить
    ignore - список. Список слов

    Возвращает
    * True, если в команде содержится слово из списка ignore
    * False - если нет
    '''
    # return any(word in command for word in ignore)
    
    ignore_words_list = ['duplex', 'alias', 'Current configuration']
    
    for word in ignore_words_list:
      if word in in_command:
        return True
        
    return False

def parse_cfg_file(in_cfg_file):
    '''
    Функция обрабатывает конфигурационный файл коммутатора и возвращает словарь:
    
    * Все команды верхнего уровня (глобального режима конфигурации) являются ключами
    * Если у команды верхнего уровня есть подкоманды, они должны быть в списке у соответствующего ключа
    * Если у команды верхнего уровня нет подкоманд, то значение будет пустым списком

    Функция ожидает в качестве аргумента имя конфигурационного файла
    '''
    
    file_mode = 'r'
    out_cfg_dict = {}
    
    with open(in_cfg_file, file_mode) as cfg_file:
      
      for cmd in cfg_file:
        if cmd.strip() and not cmd.startswith('!') and not ignore_command(cmd.strip()):
          print(cmd.rstrip()) # debug output. delete after testing
          
          if not cmd.startswith(' '):
            last_key = cmd.strip()
            out_cfg_dict[last_key] = []
            
          if cmd.startswith(' '):
            out_cfg_dict[last_key].append(cmd.strip())
            
    return out_cfg_dict
    
############### program #####################################################################################

cfg_file = 'config_sw1.txt'
cfg_dict = {}

cfg_dict = parse_cfg_file(cfg_file)
print(cfg_dict)